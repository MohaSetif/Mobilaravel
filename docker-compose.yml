services:
  # Frontend - Expo
  frontend:
    build:
      context: ./front
      dockerfile: Dockerfile
    volumes:
      - ./front:/app
      - /app/node_modules
    ports:
      - "19000:19000"  # Expo default port
      - "19001:19001"  # Metro bundler
      - "19002:19002"  # Expo DevTools
      - "8081:8081"    # React Native packager
    environment:
      - NODE_ENV=development
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - backend
      - fastapi
    networks:
      - app-network

  # Backend - Laravel
  backend:
    build:
      context: ./back
      dockerfile: Dockerfile
    volumes:
      - ./back:/var/www/html
      - /var/www/html/vendor
    ports:
      - "8000:8000"
    environment:
      - DB_CONNECTION=pgsql
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - AI_SERVICE_HOST=fastapi
      - AI_SERVICE_PORT=7000
    depends_on:
      - postgres
    networks:
      - app-network

  # Database - PostgreSQL
  postgres:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=${DB_DATABASE}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_DATABASE}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  # Redis
  redis:
    image: redis:alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local